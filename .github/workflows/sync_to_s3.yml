name: Agent from S3
on:
  push:
    branches:
      - main
    inputs:
      aws_region:
        description: Target AWS Region
        default: "us-east-1"
        type: string
      aws_account_id:
        description: AWS Account ID
        default: "182968331794"
        type: string
        container_name:
          description: current container
          default: "sdk:8.0-alpine"
          type: string
      cs_agent:
        description: the current CrowdStrike agent
        default: "LinuxCrowdstrike.rpm"
        type: string

jobs:
  get-agents:
    runs-on: ubuntu-latest
    steps:
      - name: Checkous Repository
        uses: actions/checkout/@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          ##       role-to-assume: arn:aws:iam::182968331794:role/GHActions-S3ReadOnly
          aws-access-key-id: ${{ secrets.BUCKET_KEY }}
          aws-secret-access-key: ${{ secrets.BUCKET_SECRET }}
          aws-region: us-east-1

      # - name: Get Agent(s) from S3
      #   run: aws s3 cp s3://gh-golden-bucket/LinuxCrowdstrike.rpm .

      # - name: List current path of Agents
      #  run: ls *.rpm

      # - name: check for Dockerfile
      #  run: ls Dockerfile

      # - name: Add CS agent line to Dockerfile
      #   run: echo "RUN ${{inputs.cs_agent}}" > Dockerfile

      - name: CAT DF
        run: cat Dockerfile

      - name: Build Docker Container
        id: build
        run: |
          docker build -t sdk:8.0-alpine .

  scan_with_wiz:
    needs: get-agents
    runs-on: ubuntu-22.04-arm #ubuntu-latest
    steps:
      - name: Download wiz-cli binary
        run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli
        shell: bash

      - name: Log into Wiz
        run: ./wizcli auth --id ${{ secrets.WIZ_CLIENT_ID }} --secret ${{ secrets.WIZ_CLIENT_SECRET }}
        shell: bash

      - name: List Containers
        run: docker images

  build_and_push:
    needs: scan_with_wiz
    runs-on: ubuntu-latest
    steps:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ inputs.aws_account_id }}
