name: Sign and Scan
env:
  owner: abook-presidio
  repo: securecontainer
  pull_url: "public.ecr.aws/lambda/nodejs:18-x86_64"
on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: Target AWS Region
        default: "us-east-1"
        type: string
      aws_account_id:
        description: AWS Account ID
        default: "182968331794"
        type: string
      image_tag:
        description: Tag to apply to images.
        type: string
        default: snapshot-artifact

jobs:
  build:
    name: "Build and scan with Wiz"
    runs-on: ubuntu-latest
    env:
      SCAN_PATH: "."
      POLICY: "Default vulnerabilities policy" # Set desired cli policy here
      TAG: "docker-tag"
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkous Repository
        uses: actions/checkout/@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.BUCKET_KEY }}
          aws-secret-access-key: ${{ secrets.BUCKET_SECRET }}
          aws-region: us-east-1

      - name: prepare ECR repo name based on the docker repo url
        shell: bash
        run: |
          set -eux
          # grab the third value of the url
          tail=`echo $pull_url | cut -d"/" -f3`
          # Remove the colon
          repo=`echo "$tail" | sed -r 's/://g'`

          # replace / with _
          echo "ECR_REPO_NAME=${repo}" >> $GITHUB_ENV

      - name: Build the Docker image
        run: cd $SCAN_PATH && docker build . --tag $TAG

      - name: Download Wiz CLI
        run: curl -o wizcli https://downloads.wiz.io/latest/wizcli-linux-amd64 && chmod +x wizcli

      #   - name: Authenticate to Wiz
      #     run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
      #     env:
      #       WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
      #       WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      #   - name: Run wiz cli docker image scan
      #     run: ./wizcli docker scan --image $TAG --policy "$POLICY"
      # Run both wiz iac and docker scans, and upload the results to Wiz
      - name: Wiz Full Scan With Default Values
        uses: aleksei-aikashev/wizcli-wrapper@v1
        with:
          # Docker images vulnerability scan defaults
          docker_scan_path: "."
          wiz_docker_vulnerabilities_policy: "Default vulnerabilities policy"
          wiz_docker_report_name: "${{ github.repository }}-${{ github.run_number }}"
          skip_docker_scan: null
          # Common inputs
          wiz_client_id: ${{ secrets.WIZ_CLIENT_ID }}
          wiz_client_secret: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: Download ECR Credential Helper
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y amazon-ecr-credential-helper
          cd ~/
          pwd

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ inputs.aws_account_id }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
          IMAGE_TAG: ${{ inputs.image_tag }}
        run: |
          docker build . -t "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG }}"
          docker push "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG }}"
          echo "IMAGE ${{ env.IMAGE_TAG }} is pushed to ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_TAG }}"
          echo "image_tag=${{ env.IMAGE_TAG }}" 
          echo "full_image=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG }}"
